pipeline {
    agent{
        kubernetes {
            yaml """
apiVersion: v1
kind: Pod
metadata:
  name: builder
  annotations:
    iam.amazonaws.com/role: arn:aws:iam::933594548532:role/DevOpsPHIntern
spec:
  containers:
  - name: kubectl
    image: joshendriks/alpine-k8s
    command:
    - /bin/cat
    tty: true    
    volumeMounts:
      - readOnly: false
  - name: kaniko
    image: gcr.io/kaniko-project/executor:debug
    command:
    - /busybox/cat
    tty: true
    volumeMounts:
      - name: kaniko-secret
        mountPath: /kaniko/.docker
  volumes:
    - name: kaniko-secret
      secret:
        secretName: regcred
        items:
          - key: .dockerconfigjson
            path: config.json
"""
        }
    } 

    stages {

        // stage('Create Jar File') {
        //     steps {
        //         withMaven(maven:'maven') {
        //             sh "mvn clean package"
        //         }
        //     }
        // }

        // stage('Kaniko Build and Push Image') {
        //     steps {
        //         container('kaniko') {
        //             script {
        //                 sh """
        //                     /kaniko/executor --dockerfile `pwd`/Dockerfile \
        //                      --context `pwd` \
        //                      --destination=gelocasauay01/sample-java-jenkins:latest
        //                 """
        //             }
        //         }
        //     }
        // }

        stage('Deploy App to Kubernetes') {     
            steps {
                container('kubectl') {
                    withCredentials([file(credentialsId: 'kubeconfig', variable: 'KUBECONFIG')]) {
                        sh '''
                                apk --no-cache add \
                                binutils \
                                curl \
                            && curl -sL https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub -o /etc/apk/keys/sgerrand.rsa.pub \
                            && curl -sLO https://github.com/sgerrand/alpine-pkg-glibc/releases/download/${GLIBC_VERSION}/glibc-${GLIBC_VERSION}.apk \
                            && curl -sLO https://github.com/sgerrand/alpine-pkg-glibc/releases/download/${GLIBC_VERSION}/glibc-bin-${GLIBC_VERSION}.apk \
                            && curl -sLO https://github.com/sgerrand/alpine-pkg-glibc/releases/download/${GLIBC_VERSION}/glibc-i18n-${GLIBC_VERSION}.apk \
                            && apk add --no-cache \
                                glibc-${GLIBC_VERSION}.apk \
                                glibc-bin-${GLIBC_VERSION}.apk \
                                glibc-i18n-${GLIBC_VERSION}.apk \
                            && /usr/glibc-compat/bin/localedef -i en_US -f UTF-8 en_US.UTF-8 \
                            && curl -sL https://awscli.amazonaws.com/awscli-exe-linux-x86_64-${AWSCLI_VERSION}.zip -o awscliv2.zip \
                            && unzip awscliv2.zip \
                            && aws/install \
                            && rm -rf \
                                awscliv2.zip \
                                aws \
                                /usr/local/aws-cli/v2/current/dist/aws_completer \
                                /usr/local/aws-cli/v2/current/dist/awscli/data/ac.index \
                                /usr/local/aws-cli/v2/current/dist/awscli/examples \
                                glibc-*.apk \
                            && find /usr/local/aws-cli/v2/current/dist/awscli/botocore/data -name examples-1.json -delete \
                            && apk --no-cache del \
                                binutils \
                                curl \
                            && rm -rf /var/cache/apk/*
                        '''

                        sh 'kubectl apply -f k8s-deployment.yaml'
                    }
                }
            }
        }

    }
}