pipeline {
    agent{
        kubernetes {
            yaml """
apiVersion: v1
kind: Pod
metadata:
  name: builder
spec:
  containers:
  - name: aws
    image: amazon/aws-cli
    command:
    - /bin/cat
    tty: true    
  - name: kaniko
    image: gcr.io/kaniko-project/executor:debug
    command:
    - /busybox/cat
    tty: true
    volumeMounts:
      - name: kaniko-secret
        mountPath: /kaniko/.docker
  volumes:
    - name: kaniko-secret
      secret:
        secretName: regcred
        items:
          - key: .dockerconfigjson
            path: config.json
"""
        }
    } 

    stages {

        // stage('Create Jar File') {
        //     steps {
        //         withMaven(maven:'maven') {
        //             sh "mvn clean package"
        //         }
        //     }
        // }

        // stage('Kaniko Build and Push Image') {
        //     steps {
        //         container('kaniko') {
        //             script {
        //                 sh """
        //                     /kaniko/executor --dockerfile `pwd`/Dockerfile \
        //                      --context `pwd` \
        //                      --destination=gelocasauay01/sample-java-jenkins:latest
        //                 """
        //             }
        //         }
        //     }
        // }

        stage('Deploy App to Kubernetes') {     
            steps {
                container('aws') {
                    withCredentials([file(credentialsId: 'kubeconfig', variable: 'KUBECONFIG')]) {
                        sh 'curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.18.0/bin/linux/amd64/kubectl'
                        sh 'chmod +x ./kubectl'
                        sh 'mv ./kubectl /usr/local/bin/kubectl'
                        sh 'kubectl apply -f k8s-deployment.yaml'    
                    }
                }
            }
        }

    }
}